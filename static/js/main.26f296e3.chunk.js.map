{"version":3,"sources":["Video.js","App.js","reportWebVitals.js","index.js"],"names":["Video","match","location","console","log","params","id","useState","setId","hide","setHide","useEffect","window","addEventListener","isHiding","vimeo","innerWidth","scroll","style","overflow","width","height","onError","e","video","autoplay","responsive","loop","showByline","showTitle","controls","color","showPortrait","background","App","basename","process","path","exact","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAwDeA,EApDD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACnBC,QAAQC,IAAIH,EAAMI,OAAOC,IACzBH,QAAQC,IAAIF,GAFqB,MAGZK,oBAAU,GAHE,mBAGzBD,EAHyB,KAGrBE,EAHqB,OAIRD,oBAAS,GAJD,mBAIzBE,EAJyB,KAInBC,EAJmB,KAKjCC,qBAAU,WACNC,OAAOC,iBAAiB,SAAUC,KACpC,IAEFH,qBAAU,WAAK,IAAD,IACJI,EAAK,oBAAGd,EAAMI,cAAT,aAAG,EAAcC,UAAjB,QAAuB,UAClCE,EAAMO,KACR,CAACd,EAAMI,OAAOC,KAEhB,IAAMQ,EAAW,WACbJ,EAAQE,OAAOI,YAAc,KAC7Bb,QAAQC,IAAIQ,OAAOI,YAAc,MAQrC,OADAb,QAAQC,IAAIE,GAER,qBAAKW,OAAO,KAAKC,MAAQ,CAAGC,SAAU,UAAtC,UACa,IAARb,EACG,cAAC,IAAD,CACIY,MAAO,CACHE,MAAQ,QAASC,OAAS,SAE9BC,QAbA,SAACC,GACbf,GAAO,GACPL,QAAQC,IAAI,OAAQmB,IAYRC,MAAOlB,EACPmB,UAAU,EACVC,YAAU,EACVC,MAAI,EACJC,YAAY,EACZC,WAAW,EACXC,SAAUrB,EACVsB,MAAO,SACPC,cAAc,IAKd,qBAAKd,MAAO,CAACE,MAAQ,QAASC,OAAS,QAASY,WAAa,aC9BlEC,MAbf,WACE,OAEI,cAAC,IAAD,CAAgBC,SAAUC,eAA1B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,OAAOC,OAAK,EAACC,UAAWvC,IACpC,cAAC,IAAD,CAAUqC,KAAK,IAAIG,GAAG,YCArBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.26f296e3.chunk.js","sourcesContent":["import Vimeo from \"@u-wave/react-vimeo\";\nimport {useCallback, useEffect, useState} from \"react\";\n\n\nconst Video = ({match, location}) => {\n    console.log(match.params.id)\n    console.log(location)\n    const [ id, setId] = useState(-1)\n    const [ hide, setHide] = useState(true)\n    useEffect(()=>{\n        window.addEventListener('resize', isHiding)\n    },[])\n\n    useEffect(()=>{\n        const vimeo = match.params?.id ?? 532522978\n        setId(vimeo)\n    },[match.params.id])\n\n    const isHiding = () => {\n        setHide(window.innerWidth >= 520)\n        console.log(window.innerWidth >= 520)\n    }\n    const onError = (e) =>{\n        setId(-1)\n        console.log(\"eeee\", e)\n\n    }\n    console.log(id)\n    return (\n        <div scroll=\"no\" style={ {  overflow: 'hidden', } }>\n            {id !== -1 ? (\n                <Vimeo\n                    style={{\n                        width : '100vw', height : '100vh'\n                    }}\n                    onError={onError}\n                    video={id}\n                    autoplay={true}\n                    responsive\n                    loop\n                    showByline={false}\n                    showTitle={false}\n                    controls={hide}\n                    color={'FF4C22'}\n                    showPortrait={false}\n                />\n            )\n            :\n                (\n                    <div style={{width : '100vw', height : '100vh', background : '#222'}}>\n                    </div>\n                )}\n\n        </div>\n    )\n}\nexport default Video;\n","\nimport './App.css';\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter, Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\nimport Video from \"./Video\";\nfunction App() {\n  return (\n\n      <BrowserRouter  basename={process.env.PUBLIC_URL}>\n          <Switch>\n              <Route path=\"/:id\" exact component={Video} />\n              <Redirect path=\"*\" to=\"/\" />\n          </Switch>\n      </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}