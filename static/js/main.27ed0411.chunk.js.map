{"version":3,"sources":["Video.js","App.js","reportWebVitals.js","index.js"],"names":["Video","match","location","useState","id","setId","handleRef","useRef","play","useEffect","window","ReactNativeWebView","postMessage","vimeo","params","scroll","style","overflow","ref","className","url","controls","config","playerOptions","playsinline","color","byline","loop","portrait","autoplay","width","height","background","App","path","exact","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAmGeA,EA7FD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAqB,KAAdC,SAEEC,oBAAU,IAFE,mBAEzBC,EAFyB,KAErBC,EAFqB,OAGRF,oBAAS,GAHD,mBAI3BG,GAJ2B,UAIfC,iBAAO,OAJQ,EAKTJ,oBAAS,GALA,mBAK1BK,EAL0B,UAQjCC,qBAAU,WACHC,OAAOC,oBACND,OAAOC,mBAAmBC,YAAY,YAE5C,CAACR,EAAII,IAiBP,OARAC,qBAAU,WAAK,IAAD,IACJI,EAAK,oBAAGZ,EAAMa,cAAT,aAAG,EAAcV,UAAjB,QAAuB,UAClCC,EAAMQ,KACR,CAACZ,EAAMa,OAAOV,KAMZ,qBAAKW,OAAO,KAAKC,MAAQ,CAAGC,SAAU,UAAtC,UACa,IAARb,EAkBG,qBACIc,IAAKZ,EACLa,UAAU,iBAFd,SAWI,cAAC,IAAD,CACIA,UAAU,eACVC,IAAG,yCAAoChB,EAApC,uEACHiB,UAAU,EAGVC,OAAS,CACLT,MAAQ,CACJU,cAAe,CACXC,YAAa,EACbC,MAAQ,SACRC,OAAS,EACTC,KAAO,EACPC,SAAW,EACXC,SAAW,KAIvBC,MAAO,OACPC,OAAQ,WAOZ,qBAAKf,MAAO,CAACc,MAAQ,QAASC,OAAS,QAASC,WAAa,aCzElEC,MAbf,WACE,OAEI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,OAAOC,OAAK,EAACC,UAAWpC,IACpC,cAAC,IAAD,CAAUkC,KAAK,IAAIG,GAAG,YCArBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27ed0411.chunk.js","sourcesContent":["import Vimeo from \"@u-wave/react-vimeo\";\nimport {useCallback, useEffect, useRef, useState} from \"react\";\nimport ReactPlayer from 'react-player'\nimport './App.css';\nimport fscreen from 'fscreen';\n\nconst Video = ({match, location}) => {\n\n    const [ id, setId] = useState(-1)\n    const [ hide, setHide] = useState(true)\n    const handleRef = useRef(null);\n    const [play, setPlay] = useState(false)\n\n\n    useEffect(()=>{\n        if(window.ReactNativeWebView) {\n            window.ReactNativeWebView.postMessage('change') // is working\n        }\n    },[id, play])\n\n    const test = () => {\n        console.log(\"test change\") // web working\n        if(window.ReactNativeWebView){\n            window.ReactNativeWebView.postMessage('change') // but this not working\n        }\n    }\n\n    useEffect(()=>{\n        const vimeo = match.params?.id ?? 532522978\n        setId(vimeo)\n    },[match.params.id])\n\n\n\n\n    return (\n        <div scroll=\"no\" style={ {  overflow: 'hidden' } }>\n            {id !== -1 ? (\n                // <Vimeo\n                //     id={'video'}\n                //     style={{\n                //         width : '100%', height : '100%'\n                //     }}\n                //     onError={onError}\n                //     video={id}\n                //     autoplay={true}\n                //     loop\n                //     showByline={false}\n                //     showTitle={false}\n                //     controls={hide}\n                //     color={'FF4C22'}\n                //\n                //     webkitallowfullscreen={true}\n                //     showPortrait={false}\n                // />\n                <div\n                    ref={handleRef}\n                    className='player-wrapper'>\n\n                    {/*<iframe frameBorder=\"0\" width=\"100%\" height=\"100%\"*/}\n                    {/*        className='react-player'*/}\n                    {/*        allow={'autoplay; fullscreen; picture-in-picture'}*/}\n                    {/*        src={`https://player.vimeo.com/video/${id}?title=0&byline=0&portrait=0&speed=0&color=ff4c22&autoplay=1&loop=1`}*/}\n                    {/*        webkitAllowFullScreen={true}*/}\n                    {/*        mozAllowFullScreen={true}*/}\n                    {/*        allowFullScreen={true}/>*/}\n                    <ReactPlayer\n                        className='react-player'\n                        url={`https://player.vimeo.com/video/${id}?title=0&byline=0&portrait=0&speed=0&color=ff4c22&autoplay=1&loop=1`}\n                        controls={true}\n\n\n                        config={ {\n                            vimeo : {\n                                playerOptions: {\n                                    playsinline: 1,\n                                    color : 'ff4c22',\n                                    byline : 0,\n                                    loop : 1,\n                                    portrait : 0,\n                                    autoplay : 1,\n                                }\n                            }\n                        }}\n                        width={'100%'}\n                        height={'100%'}\n\n                    />\n                </div>\n            )\n            :\n                (\n                    <div style={{width : '100vw', height : '100vh', background : '#222'}}>\n                    </div>\n                )}\n\n        </div>\n    )\n}\nexport default Video;\n","\nimport './App.css';\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter, Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\nimport Video from \"./Video\";\nfunction App() {\n  return (\n\n      <HashRouter>\n          <Switch>\n              <Route path=\"/:id\" exact component={Video} />\n              <Redirect path=\"*\" to=\"/\" />\n          </Switch>\n      </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}